"""
Django settings for leaderboard project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

from azure.identity import DefaultAzureCredential
from azure.keyvault.secrets import KeyVaultSecret, SecretClient

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = Path(BASE_DIR, "static")

try:
    deploy_env = os.environ["DEPLOY_ENV"]
except KeyError:
    deploy_env = None

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i2p6$*86_!(r*cnap52+2eq++%4jwo+o@id%+-daly!nq_&i&z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'ranking_app',
    'intercoolerjs',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'leaderboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'leaderboard.wsgi.application'

def get_postgres_cred():

    cred = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    if not deploy_env:
        return cred

    azure_resource_name = "oxykil88mluhdd0o678krkc9"
    # We don't need to specify any credentials here, because Stratosphere will take
    # care of injecting them.
    CREDS = DefaultAzureCredential()

    # The `azure-resource-name` is generated by the Stratosphere and will be returned
    # when creating your resource.
    client = SecretClient(
        vault_url=f"https://{azure_resource_name}.vault.azure.net", credential=CREDS
    )
    secret_key = f"leaderborduser-{deploy_env}-password"

    cred = {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': f"leaderboard_{deploy_env}",
        'USER': f"leaderborduser_{deploy_env}@{azure_resource_name}",
        'PASSWORD': client.get_secret(secret_key).value,
        'HOST': f"{azure_resource_name}.postgres.database.azure.com",
        'PORT': '',
        'OPTIONS': {'sslmode': 'require'},
    }

    return cred


DATABASES = {
    'default': get_postgres_cred()
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# custom initial admin users
ADMINS = [
    {
        'username': 'pydata-leaderboard-admin',
        'email': 'some-dummy-email@mail.com',
        'password': 'some-super-secure-dummy-password-to-be-replaced',
    }
]
